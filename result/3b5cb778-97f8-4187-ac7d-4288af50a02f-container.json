{"uuid": "3b884235-f084-439a-b108-625e2ced5634", "children": ["ee2c1d46-c5b1-4193-9a38-e70bf15068a9"], "befores": [{"name": "_xunit_setup_method_fixture_TestChangeCarcenter", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.SessionNotCreatedException: Message: A new session could not be created. Details: java.lang.IllegalStateException: UiAutomation not connected, UiAutomation@56e647c[id=-1, flags=0]\nStacktrace:\nio.appium.uiautomator2.common.exceptions.SessionNotCreatedException: java.lang.IllegalStateException: UiAutomation not connected, UiAutomation@56e647c[id=-1, flags=0]\n\tat io.appium.uiautomator2.handler.NewSession.safeHandle(NewSession.java:60)\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:277)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:271)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:923)\nCaused by: java.lang.IllegalStateException: UiAutomation not connected, UiAutomation@56e647c[id=-1, flags=0]\n\tat android.app.UiAutomation.throwIfNotConnectedLocked(UiAutomation.java:1239)\n\tat android.app.UiAutomation.getServiceInfo(UiAutomation.java:497)\n\tat androidx.test.uiautomator.UiDevice.<init>(UiDevice.java:115)\n\tat androidx.test.uiautomator.UiDevice.getInstance(UiDevice.java:261)\n\tat io.appium.uiautomator2.utils.Device.getUiDevice(Device.java:34)\n\tat io.appium.uiautomator2.core.UiAutomatorBridge.getUiAutomation(UiAutomatorBridge.java:53)\n\tat io.appium.uiautomator2.core.UiAutomation.<init>(UiAutomation.java:32)\n\tat io.appium.uiautomator2.core.UiAutomation.getInstance(UiAutomation.java:37)\n\tat io.appium.uiautomator2.model.NotificationListener.<init>(NotificationListener.java:43)\n\tat io.appium.uiautomator2.model.NotificationListener.getInstance(NotificationListener.java:48)\n\tat io.appium.uiautomator2.model.settings.EnableNotificationListener.getValue(EnableNotificationListener.java:31)\n\tat io.appium.uiautomator2.model.settings.EnableNotificationListener.getValue(EnableNotificationListener.java:21)\n\tat io.appium.uiautomator2.model.settings.AbstractSetting.reset(AbstractSetting.java:57)\n\tat io.appium.uiautomator2.model.settings.Settings.resetForNewSession(Settings.java:73)\n\tat io.appium.uiautomator2.handler.NewSession.safeHandle(NewSession.java:52)\n\t... 34 more\n\n", "trace": "  File \"D:\\software\\Python310\\lib\\site-packages\\pluggy\\_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\software\\Python310\\lib\\site-packages\\_pytest\\fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\software\\Python310\\lib\\site-packages\\_pytest\\fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n  File \"D:\\software\\Python310\\lib\\site-packages\\_pytest\\python.py\", line 899, in xunit_setup_method_fixture\n    _call_with_optional_argument(func, method)\n  File \"D:\\software\\Python310\\lib\\site-packages\\_pytest\\python.py\", line 779, in _call_with_optional_argument\n    func()\n  File \"E:\\DM\\ShirleyPytest\\scripts\\test02_change_carcenter.py\", line 19, in setup_method\n    self.driver = init_driver()\n  File \"E:\\DM\\ShirleyPytest\\base\\base_driver.py\", line 17, in init_driver\n    driver = webdriver.Remote(\"http://127.0.0.1:4723\", caps)\n  File \"D:\\software\\Python310\\lib\\site-packages\\appium\\webdriver\\webdriver.py\", line 257, in __init__\n    super().__init__(\n  File \"D:\\software\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"D:\\software\\Python310\\lib\\site-packages\\appium\\webdriver\\webdriver.py\", line 346, in start_session\n    response = self.execute(RemoteCommand.NEW_SESSION, w3c_caps)\n  File \"D:\\software\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\software\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1699928702968, "stop": 1699928708881}], "start": 1699928702968, "stop": 1699928709056}